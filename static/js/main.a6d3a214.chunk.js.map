{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Project","props","class","href","url","target","name","description","Course","App","projectComponents","projectsData","map","project","key","id","coursesComponents","coursesCompleted","course","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAkCA,SAASA,EAAQC,GAChB,OACC,uBAAGC,MAAM,eAAeC,KAAMF,EAAMG,IAAKC,OAAO,UAC/C,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,cAKb,SAASC,EAAOP,GACf,OACC,2BACC,uBAAGE,KAAMF,EAAMG,IAAKC,OAAO,SAASH,MAAM,eACxCD,EAAMK,OAMIG,MAlDf,WACC,IAAMC,EAAoBC,EAAaC,KAAI,SAACC,GAAD,OAC1C,kBAACb,EAAD,CACCc,IAAKD,EAAQE,GACbT,KAAMO,EAAQP,KACdC,YAAaM,EAAQN,YACrBH,IAAKS,EAAQT,SAGTY,EAAoBC,EAAiBL,KAAI,SAACM,GAAD,OAC9C,kBAACV,EAAD,CAAQM,IAAKI,EAAOH,GAAIT,KAAMY,EAAOZ,KAAMF,IAAKc,EAAOd,SAExD,OACC,yBAAKF,MAAM,aACV,yBAAKA,MAAM,WACV,yBAAKA,MAAM,SACV,8CACA,uHAKD,wBAAIA,MAAM,mBAAV,YACA,yBAAKA,MAAM,qBAAqBQ,GAChC,wBAAIR,MAAM,mBAAV,qBACA,yBAAKA,MAAM,oBAAoBc,MA2B7BL,EAAe,CACpB,CACCI,GAAI,EACJT,KAAM,qBACNC,YACC,oHACDH,IAAK,yCAEN,CACCW,GAAI,EACJT,KAAM,yBACNC,YACC,8KACDH,IAAK,yCAEN,CACCW,GAAI,EACJT,KAAM,qBACNC,YACC,4EACDH,IAAK,mDAEN,CACCW,GAAI,EACJT,KAAM,+BACNC,YACC,kFACDH,IAAK,yCAEN,CACCW,GAAI,EACJT,KAAM,uBACNC,YACC,2GACDH,IAAK,yCAEN,CACCW,GAAI,EACJT,KAAM,cACNC,YACC,wFACDH,IAAK,0CAIDa,EAAmB,CACxB,CACCF,GAAI,EACJT,KAAM,wBACNF,IACC,iFAEF,CACCW,GAAI,EACJT,KAAM,4CACNF,IACC,sGCnGiBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a6d3a214.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\tconst projectComponents = projectsData.map((project) => (\n\t\t<Project\n\t\t\tkey={project.id}\n\t\t\tname={project.name}\n\t\t\tdescription={project.description}\n\t\t\turl={project.url}\n\t\t/>\n\t));\n\tconst coursesComponents = coursesCompleted.map((course) => (\n\t\t<Course key={course.id} name={course.name} url={course.url} />\n\t));\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"intro\">\n\t\t\t\t\t<h1>Adam Goldstone</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tI am a self taught programmer with experience using HTML, CSS, JavaScript,\n\t\t\t\t\t\tReact and C.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<h2 class=\"section-heading\">Projects</h2>\n\t\t\t\t<div class=\"project-container\">{projectComponents}</div>\n\t\t\t\t<h2 class=\"section-heading\">Courses Completed</h2>\n\t\t\t\t<div class=\"course-container\">{coursesComponents}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Project(props) {\n\treturn (\n\t\t<a class=\"project-item\" href={props.url} target=\"_blank\">\n\t\t\t<h3>{props.name}</h3>\n\t\t\t<p>{props.description}</p>\n\t\t</a>\n\t);\n}\n\nfunction Course(props) {\n\treturn (\n\t\t<p>\n\t\t\t<a href={props.url} target=\"_blank\" class=\"course-item\">\n\t\t\t\t{props.name}\n\t\t\t</a>\n\t\t</p>\n\t);\n}\n\nexport default App;\n\nconst projectsData = [\n\t{\n\t\tid: 5,\n\t\tname: \"Markdown Previewer\",\n\t\tdescription:\n\t\t\t\"I created a web app which allows a user to type in plain text. The app will convert it into markdown styled text.\",\n\t\turl: \"https://codepen.io/amg93/full/MWKpJME\"\n\t},\n\t{\n\t\tid: 4,\n\t\tname: \"Random Quote Generator\",\n\t\tdescription:\n\t\t\t\"This is a web app which will generate a random quote from an API. The user can click a button to generate a new quote and another button to tweet the quote and its author.\",\n\t\turl: \"https://codepen.io/amg93/full/NWxpNNB\"\n\t},\n\t{\n\t\tid: 6,\n\t\tname: \"Palindrome Checker\",\n\t\tdescription:\n\t\t\t\"I built a simple JavaScript program to check if a string is a palindrome.\",\n\t\turl: \"https://repl.it/@agoldstone93/PalindromeChecker\"\n\t},\n\t{\n\t\tid: 3,\n\t\tname: \"Technical Documentation Page\",\n\t\tdescription:\n\t\t\t\"This is a page which displays a lot of information within a technical document.\",\n\t\turl: \"https://codepen.io/amg93/full/KKpJzYZ\"\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"Product Landing Page\",\n\t\tdescription:\n\t\t\t\"This is an example product landing page. It contains an embedded video and information laid out clearly.\",\n\t\turl: \"https://codepen.io/amg93/full/abOXzQL\"\n\t},\n\t{\n\t\tid: 1,\n\t\tname: \"Survey Form\",\n\t\tdescription:\n\t\t\t\"This is a basic survey form which allows users to enter information about themselves.\",\n\t\turl: \"https://codepen.io/amg93/full/qBdEQNJ\"\n\t}\n];\n\nconst coursesCompleted = [\n\t{\n\t\tid: 1,\n\t\tname: \"Responsive Web Design\",\n\t\turl:\n\t\t\t\"https://www.freecodecamp.org/certification/agoldstone93/responsive-web-design\"\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"JavaScript Algorithms and Data Structures\",\n\t\turl:\n\t\t\t\"https://www.freecodecamp.org/certification/agoldstone93/javascript-algorithms-and-data-structures\"\n\t}\n];\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}